{"version":3,"sources":["pages/BlogItem.js","data/blog/blog_titles.js"],"names":["LinkRenderer","children","BlogItem","id","useParams","fileName","i","blogTitles","length","blogTitle","index","parseInt","file","markdown","count","split","map","s","replace","filter","title","description","className","data-testid","to","source","renderers","Link","escapeHtml","date"],"mappings":"2iLAUMA,EAAe,SAAC,GAAD,IAAMC,EAAN,2BAAqB,cAAC,IAAD,eAAUA,KA8CrCC,UA5CE,WAKf,IALqB,IAGbC,EAAOC,cAAPD,GACJE,EAAW,GACNC,EAAI,EAAGA,EAAIC,IAAWC,OAAQF,GAAK,EAAG,CAC7C,IAAMG,EAAYF,IAAWD,GAC7B,GAAIG,EAAUC,QAAUC,SAASR,EAAI,IAAK,CACxCE,EAAWI,EAAUG,KACrB,OAKJ,IAAMC,EAAQ,KAERC,EAAQD,EAASE,MAAM,OAC1BC,KAAI,SAACC,GAAD,OAAOA,EAAEC,QAAQ,MAAO,OAC5BC,QAAO,SAACF,GAAD,OAAOA,EAAET,UAAQA,OAE3B,OACE,cAAC,IAAD,CACEY,MAAM,WACNC,YAAY,gCAFd,SAIE,0BAASC,UAAU,gBAAgBnB,GAAG,OAAtC,UACE,iCACE,sBAAKmB,UAAU,QAAf,UACE,oBAAIC,cAAY,UAAhB,SAA0B,cAAC,IAAD,CAAMC,GAAG,UAAT,oBAC1B,2CAAcV,EAAd,kBAGJ,cAAC,IAAD,CACEW,OAAQZ,EACRa,UAAW,CACTC,KAAM3B,GAER4B,YAAY,W,gCC5BPrB,IArBI,CACjB,CACEG,MAAO,EACPU,MAAO,kBACPS,KAAM,aACNjB,KAAM,mBAER,CACEF,MAAO,EACPU,MAAO,mBACPS,KAAM,aACNjB,KAAM,oBAER,CACEF,MAAO,EACPU,MAAO,kBACPS,KAAM,aACNjB,KAAM","file":"static/js/9.c9ea5109.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport raw from 'raw.macro';\n\nimport Main from '../layouts/Main';\n\nimport blogTitles from '../data/blog/blog_titles';\n\n// Make all hrefs react router links\nconst LinkRenderer = ({ ...children }) => <Link {...children} />;\n\nconst BlogItem = () => {\n  // get URL params and markdown file to open\n  // TODO: error checking for non int values!!!\n  const { id } = useParams();\n  let fileName = '';\n  for (let i = 0; i < blogTitles.length; i += 1) {\n    const blogTitle = blogTitles[i];\n    if (blogTitle.index === parseInt(id, 10)) {\n      fileName = blogTitle.file;\n      break;\n    }\n  }\n\n  // uses babel to load contents of file\n  const markdown = raw(`../data/blog/${fileName}.md`);\n\n  const count = markdown.split(/\\s+/)\n    .map((s) => s.replace(/\\W/g, ''))\n    .filter((s) => s.length).length;\n\n  return (\n    <Main\n      title=\"BlogItem\"\n      description=\"One of Liu Zechu's Blog Posts\"\n    >\n      <article className=\"post markdown\" id=\"post\">\n        <header>\n          <div className=\"title\">\n            <h2 data-testid=\"heading\"><Link to=\"/xxxxxx\">Blog</Link></h2>\n            <p>(in about {count} words)</p>\n          </div>\n        </header>\n        <ReactMarkdown\n          source={markdown}\n          renderers={{\n            Link: LinkRenderer,\n          }}\n          escapeHtml={false}\n        />\n      </article>\n    </Main>\n  );\n};\n\nexport default BlogItem;\n","const blogTitles = [\n  {\n    index: 0,\n    title: 'First Blog Post',\n    date: '2021-05-27',\n    file: 'first_blog_post', // without the .md extension\n  },\n  {\n    index: 1,\n    title: 'Second Blog Post',\n    date: '2021-05-28',\n    file: 'second_blog_post',\n  },\n  {\n    index: 2,\n    title: 'Third Blog Post',\n    date: '2021-05-29',\n    file: 'third_blog_post',\n  },\n];\n\nexport default blogTitles;\n"],"sourceRoot":""}