{"version":3,"sources":["components/Stats/TableRow.js","components/Stats/Table.js","data/stats/countries.js","data/stats/personal.js","components/Stats/Personal.js","components/Stats/Travel.js","data/stats/site.js","components/Stats/Site.js","pages/Stats.js"],"names":["TableRow","label","link","value","format","width","href","defaultProps","x","Table","data","map","pair","mapData","SG","CN","HK","MO","TW","VN","KR","JP","MY","ID","TH","AU","US","MX","FR","CH","DE","GB","Age","useState","age","setAge","useEffect","timer","setInterval","birthTime","Date","now","toFixed","tick","clearInterval","key","Object","keys","length","PersonalStats","Map","backgroundColor","zoomOnScroll","containerStyle","height","containerClassName","regionStyle","initial","fill","stroke","hover","cursor","selectedHover","regionsSelectable","series","regions","values","scale","normalizeFunction","dayjs","Stats","initialData","setResponseData","fetchData","useCallback","a","fetch","res","json","resData","field","includes","Main","title","description","className","id","data-testid","to","Site","Personal","Travel"],"mappings":"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","file":"static/js/14.7f03ff47.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableRow = ({\n  label, link, value, format,\n}) => (\n  <tr>\n    <td width=\"70%\">{label}</td>\n    <td>{link ? <a href={link}>{format(value)}</a> : format(value)}</td>\n  </tr>\n);\n\nTableRow.propTypes = {\n  format: PropTypes.func,\n  label: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n};\n\nTableRow.defaultProps = {\n  format: (x) => x,\n  link: null,\n  value: null,\n};\n\nexport default TableRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableRow from './TableRow';\n\nconst Table = ({ data }) => (\n  <table>\n    <tbody>\n      {data.map((pair) => (\n        <TableRow\n          format={pair.format}\n          key={pair.label}\n          label={pair.label}\n          link={pair.link}\n          value={pair.value}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n\nTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    format: PropTypes.func,\n    label: PropTypes.string.isRequired,\n    link: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n  })).isRequired,\n};\n\nexport default Table;\n","// Singapore, Mainland China, Hong Kong, Macau, Taiwan, Vietnam, South Korea,\n// Japan, Malaysia, Indonesia, Thailand, Australia, United States, Mexico, France,\n// Switzerland, Germany, United Kingdom\nconst mapData = {\n  SG: 1,\n  CN: 1,\n  HK: 1,\n  MO: 1,\n  TW: 1,\n  VN: 1,\n  KR: 1,\n  JP: 1,\n  MY: 1,\n  ID: 1,\n  TH: 1,\n  AU: 1,\n  US: 1,\n  MX: 1,\n  FR: 1,\n  CH: 1,\n  DE: 1,\n  GB: 1,\n};\n\nexport default mapData;\n","import React, { useState, useEffect } from 'react';\nimport mapData from './countries';\n\nconst Age = () => {\n  const [age, setAge] = useState();\n\n  const tick = () => {\n    const divisor = 1000 * 60 * 60 * 24 * 365.2421897; // ms in an average year\n    const birthTime = new Date('1998-08-15T12:00:00');\n    setAge(((Date.now() - birthTime) / divisor).toFixed(11));\n  };\n\n  useEffect(() => {\n    const timer = setInterval(() => tick(), 25);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return <>{age}</>;\n};\n\nconst data = [\n  {\n    key: 'age',\n    label: 'Current age',\n    value: <Age />,\n  },\n  {\n    key: 'location',\n    label: 'Current city',\n    value: 'Singapore',\n  },\n  {\n    key: 'countries',\n    label: 'Countries/Territories visited',\n    value: Object.keys(mapData).length,\n    // link:\n    //   'https://www.google.com/maps/d/embed?mid=1iBBTscqateQ93pWFVfHCUZXoDu8&z=2',\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport Table from './Table';\nimport data from '../../data/stats/personal';\n\nconst PersonalStats = () => (\n  <>\n    <h3>Some stats about me</h3>\n    <Table data={data} />\n  </>\n);\n\nexport default PersonalStats;\n","import React from 'react';\nimport { VectorMap } from 'react-jvectormap';\nimport mapData from '../../data/stats/countries';\n\n// References: https://github.com/Allegra9/custom-world-map/blob/master/src/components/map.js\n// and https://allegra9.medium.com/react-world-map-75aceda9cc48\n\nconst Map = () => (\n  <div>\n    <VectorMap\n      map=\"world_mill\"\n      backgroundColor=\"transparent\" // change it to ocean blue: #0077be\n      zoomOnScroll\n      containerStyle={{\n        width: '100%',\n        height: '520px',\n      }}\n      containerClassName=\"map\"\n      regionStyle={{\n        initial: {\n          fill: '#e4e4e4',\n          'fill-opacity': 0.9,\n          stroke: 'none',\n          'stroke-width': 0,\n          'stroke-opacity': 0,\n        },\n        hover: {\n          'fill-opacity': 0.8,\n          cursor: 'pointer',\n        },\n        selectedHover: {},\n      }}\n      regionsSelectable={false}\n      series={{\n        regions: [\n          {\n            values: mapData, // this is your data\n            scale: ['#000000', '#2938bc'], // your color game's here\n            normalizeFunction: 'polynomial',\n          },\n        ],\n      }}\n    />\n  </div>\n);\n\nexport default Map;\n","import dayjs from 'dayjs';\n\n/* Keys match keys returned by the github api. Fields without keys are\n * mostly jokes. To see everything returned by the github api, run:\n curl https://api.github.com/repos/mldangelo/personal-site\n */\nconst data = [\n  // {\n  //   label: 'Stars this repository has on github',\n  //   key: 'stargazers_count',\n  //   link: 'https://github.com/mldangelo/personal-site/stargazers',\n  // },\n  // {\n  //   label: 'Number of people watching this repository',\n  //   key: 'subscribers_count',\n  //   link: 'https://github.com/mldangelo/personal-site/stargazers',\n  // },\n  // {\n  //   label: 'Number of forks',\n  //   key: 'forks',\n  //   link: 'https://github.com/mldangelo/personal-site/network',\n  // },\n  // {\n  //   label: 'Number of spoons',\n  //   value: '0',\n  // },\n  // {\n  //   label: 'Number of linter warnings',\n  //   value: '0', // enforced via github workflow\n  // },\n  // {\n  //   label: 'Open github issues',\n  //   key: 'open_issues_count',\n  //   link: 'https://github.com/mldangelo/personal-site/issues',\n  // },\n  {\n    label: 'Last updated at',\n    key: 'pushed_at',\n    link: 'https://github.com/LiuZechu/personal-site/commits',\n    format: (x) => dayjs(x).format('MMMM DD, YYYY'),\n  },\n  {\n    label: 'Page views (based on Google Analytics; not updated real-time)',\n    value: '2',\n  },\n  // {\n  //   // TODO update this with a pre-commit hook\n  //   /* find . | grep \".js\" | grep -vE \".min.js|node_modules|.git|.json\" |\n  //   xargs -I file cat file | wc -l */\n  //   label: 'Lines of Javascript powering this website',\n  //   value: '2115',\n  //   link: 'https://github.com/mldangelo/personal-site/graphs/contributors',\n  // },\n];\n\nexport default data;\n","import React, { useState, useCallback, useEffect } from 'react';\n\nimport Table from './Table';\nimport initialData from '../../data/stats/site';\n\nconst Stats = () => {\n  const [data, setResponseData] = useState(initialData);\n  // TODO think about persisting this somewhere\n  const fetchData = useCallback(async () => {\n    // request must be authenticated if private\n    const res = await fetch(\n      'https://api.github.com/repos/LiuZechu/personal-site',\n    );\n    const resData = await res.json();\n    setResponseData(\n      initialData.map((field) => ({\n        ...field,\n        // update value if value was returned by call to github\n        value: Object.keys(resData).includes(field.key)\n          ? resData[field.key]\n          : field.value,\n      })),\n    );\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return (\n    <div>\n      <h3>Some stats about this site</h3>\n      <Table data={data} />\n    </div>\n  );\n};\n\nexport default Stats;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Personal from '../components/Stats/Personal';\nimport Travel from '../components/Stats/Travel';\nimport Site from '../components/Stats/Site';\n\nconst Stats = () => (\n  <Main\n    title=\"Stats\"\n    description=\"Some statistics about Liu Zechu and zechu.me\"\n  >\n    <article className=\"post\" id=\"stats\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"/stats\">Stats</Link></h2>\n        </div>\n      </header>\n      <Site />\n      <Personal />\n      <Travel />\n    </article>\n  </Main>\n);\n\nexport default Stats;\n"],"sourceRoot":""}