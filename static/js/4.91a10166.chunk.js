(this["webpackJsonppersonal-site"]=this["webpackJsonppersonal-site"]||[]).push([[4],{182:function(e,t,i){"use strict";i.r(t);var r=i(0),n=i(71),s=i(72),a=i(77),o=i(76),c=i(51),l=i(50),u=i(1),h=i(5),p=i(21),d=function(e){var t=e.data;return Object(r.jsx)("div",{className:"cell-container",children:Object(r.jsxs)("article",{className:"mini-post",children:[Object(r.jsxs)("header",{children:[Object(r.jsx)("h3",{children:Object(r.jsx)("a",{href:t.link,children:t.title})}),Object(r.jsx)("h4",{className:"subtitle",children:t.subtitle}),Object(r.jsx)("time",{className:"published",children:t.date})]}),Object(r.jsx)("a",{href:t.link,className:"image",children:Object(r.jsx)("img",{src:"".concat("").concat(t.image),alt:t.title})}),Object(r.jsx)("div",{className:"description",children:Object(r.jsx)("p",{children:t.desc})})]})})},g=i(73),b=i(74),f=function(e){Object(a.a)(i,e);var t=Object(o.a)(i);function i(e){var r;return Object(n.a)(this,i),(r=t.call(this,e)).handleChildClick=function(e){r.setState((function(t){var i=Object.keys(t.buttons).reduce((function(i,r){return Object(l.a)(Object(l.a)({},i),{},Object(c.a)({},r,e===r&&!t.buttons[r]))}),{});return i.All=!Object.keys(t.buttons).some((function(e){return i[e]})),{buttons:i}}))},r.state=function(e){var t=e.categories,i=e.projects;return{buttons:t.map((function(e){return e.name})).reduce((function(e,t){return Object(l.a)(Object(l.a)({},e),{},Object(c.a)({},t,!1))}),{All:!0}),projects:i}}({categories:b.a.categories,projects:b.a.projects}),r}return Object(s.a)(i,[{key:"getButtons",value:function(){var e=this;return Object.keys(this.state.buttons).map((function(t){return Object(r.jsx)(g.a,{label:t,active:e.state.buttons,handleClick:e.handleChildClick},t)}))}},{key:"getRelevantProjects",value:function(){var e=this,t=Object.keys(this.state.buttons).reduce((function(t,i){return e.state.buttons[i]?i:t}),"All");return this.state.projects.filter((function(e){return"All"===t||e.category.includes(t)}))}},{key:"getCells",value:function(){return this.getRelevantProjects().map((function(e){return Object(r.jsx)(d,{data:e},e.title)}))}},{key:"getNumActiveProjects",value:function(){return this.getRelevantProjects().length}},{key:"render",value:function(){return Object(r.jsx)(p.a,{title:"Projects",description:"Learn about Liu Zechu's projects.",children:Object(r.jsxs)("article",{className:"post",id:"projects",children:[Object(r.jsx)("header",{children:Object(r.jsxs)("div",{className:"title",children:[Object(r.jsx)("h2",{"data-testid":"heading",children:Object(r.jsx)(h.b,{to:"/projects",children:"Projects"})}),Object(r.jsx)("p",{children:"A selection of my projects."})]})}),Object(r.jsx)("div",{className:"skill-button-container",children:this.getButtons()}),Object(r.jsxs)("p",{children:["Scroll down to view all ",Object(r.jsxs)("b",{children:[this.getNumActiveProjects()," projects"]})," in this category."]}),this.getCells()]})})}}]),i}(u.Component);t.default=f},50:function(e,t,i){"use strict";i.d(t,"a",(function(){return s}));var r=i(51);function n(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?n(Object(i),!0).forEach((function(t){Object(r.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):n(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}},51:function(e,t,i){"use strict";function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}i.d(t,"a",(function(){return r}))},71:function(e,t,i){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}i.d(t,"a",(function(){return r}))},72:function(e,t,i){"use strict";function r(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function n(e,t,i){return t&&r(e.prototype,t),i&&r(e,i),e}i.d(t,"a",(function(){return n}))},73:function(e,t,i){"use strict";var r=i(0);i(1);t.a=function(e){var t=e.handleClick,i=e.active,n=e.label;return Object(r.jsx)("button",{className:"skillbutton ".concat(i[n]?"skillbutton-active":""),type:"button",onClick:function(){return t(n)},children:n})}},74:function(e,t,i){"use strict";var r="ML/AI",n="Mobile App",s="Web",a="Other",o=[{title:"GitHub Issue Auto-labeller",subtitle:"Natural Lanuage Processing with information extraction and text categorisation",link:"https://github.com/larrylawl/auto-github-issue-labeller-action",image:"/images/projects/github.gif",date:"Mar 2021 - Apr 2021",desc:'This project aims to automatically label GitHub issues with Natural Language Processing (NLP). We explored feature extraction using "important" word counts, averaged word embeddings, and sentence embeddings with Bert. We also experimented with the effects of machine information present in GitHub issues and tried out various classification algorithms. You may try this labeller out on your own GitHub repo!',category:[r],skills:["Python","Natural Language Processing (NLP)","Numpy","Pandas","Tensorflow + Keras","Scikit-Learn"]},{title:"How to cross the road like a pro",subtitle:"Deep Q Learning with reward shaping and curriculum learning",link:"https://github.com/LiuZechu/CS4246-mini-project",image:"/images/projects/dqn.jpg",date:"Apr 2021",desc:"This mini project aims to create an agent that can cross a road with 10 lanes, each lane having a length of 50. There are numerous cars on each lane having randomised starting positions and speeds. The agent uses models trained from Deep Q Learning with reward shaping and curriculum learning to solve the problem of sparse reward and slow learning. (cover image credit: https://media.wired.com/)",category:[r],skills:["Python","Numpy","PyTorch","Reinforcement Learning"]},{title:"Playlister: Music Recommendation",subtitle:"Machine Learning, audio processing, image classfication",link:"https://drive.google.com/file/d/1-PDZY--h29a1tIOaBdP00rnxar4Kqnug/view",image:"/images/projects/playlister.png",date:"Sep 2020 - Dec 2020",desc:"This Machine Learning project aims to recommend songs to users. I was mainly in charge of implementing Convolutional Neural Network for music genre classification.",category:[r],skills:["Python","Numpy","Pandas","Tensorflow + Keras","Scikit-Learn"]},{title:"Four2Ten",subtitle:"Multi-player, cross-platform mobile game built with Flutter",link:"https://github.com/Four2Ten/4210",image:"/images/projects/4210.jpg",date:"Dec 2020 - Aug 2021",desc:"In this game, you will use addition, subtraction, multiplication and division to form ten (10) with the given digits while competing with your friends and see who's the fastest!",category:[n],skills:["JavaScript","Node.JS","Dart","Flutter","AWS/GCP"]},{title:"Dish Out",subtitle:"React web app for dish reviews and recommendations in Singapore!",link:"https://dishout.co/",image:"/images/projects/dishout.gif",date:"Sep 2020 - Dec 2020",desc:"This web app focuses on dish reviews and recommendations in Singapore. (completed under CS3216)",category:[s],skills:["JavaScript","React","SQL/PostgreSQL","Heroku","Node.JS","HTML + CSS"]},{title:"Whoosh",subtitle:"Progressive Web App (PWA) that facilitates virtual queuing for restaurant diners",link:"https://github.com/LiuZechu/whoosh",image:"/images/projects/whoosh.png",date:"Aug 2020 - Sep 2020",desc:"This Flutter web app helps restaurants create virtual queues for walk-in diners, so that diners won't have to queue physically and will get notified when it's their turn. (completed under CS3216)",category:[s],skills:["Flutter","Dart"]},{title:"Relentless",subtitle:"iOS co-op game",link:"https://github.com/relentless-game/Relentless",image:"/images/projects/relentless.jpg",date:"Mar 2020 - May 2020",desc:"Relentless is a co-op multiplayer iOS game across multiple iOS devices over the network, where players work together to deliver items to households. (completed under CS3217)",category:[n],skills:["iOS Dev","Swift"]},{title:"Peggle",subtitle:"iOS game with a Physics Engine that I built from scratch",link:"https://github.com/LiuZechu/peggle-game",image:"/images/projects/peggle.jpg",date:"Jan 2020 - Mar 2020",desc:"Peggle is an iOS game where the player can shoot a canon ball which bounces around pegs to earn points. I built a Physics Engine which handles object collision without using external libraries. (completed under CS3217)",category:[n],skills:["iOS Dev","Swift"]},{title:"CSModBuddy",subtitle:"Java desktop application",link:"https://github.com/LiuZechu/CSModBuddy",image:"/images/projects/cs-modbuddy.jpg",date:"Aug 2019 - Nov 2019",desc:"A Java desktop application for NUS CS undergraduates to plan modules and manage their study plans.",category:[a],skills:["Java"]},{title:"Petopia",subtitle:"Pet care service built with Vue.js and PostgreSQL",link:"https://github.com/LiuZechu/pet-care-service",image:"/images/projects/petopia.jpg",date:"Sep 2020 - Dec 2020",desc:"Petopia is a pet care service platform where users can sign up as pet owners or caretakers. Pet owners can look for caretakers to help them care for their pets.",category:[s],skills:["SQL/PostgreSQL","JavaScript","Vue.JS","Heroku","Node.JS","Express.JS"]},{title:"Jars",subtitle:"Android app to help you learn through memory",link:"https://github.com/LiuZechu/Jars",image:"/images/projects/jars.jpg",date:"May 2019 - Aug 2019",desc:"Jars is an Android app where users can automatically create flashcards from highlighting sentences while reading. The flashcards are reviewed according to spaced repetition that increases memory retention. This project won Apollo 11 (highest) Award in NUS Orbital 2019.",category:[n],skills:["Android Dev","Java"]},{title:"Planit",subtitle:"To-do manager built with Ruby on Rails",link:"https://github.com/LiuZechu/Riding-on-Rails",image:"/images/projects/planit.jpg",date:"Dec 2018 - Jan 2019",desc:"I developed a web app with user sign-in feature that keeps track of user\u2019s to-do tasks, allows basic CRUD operations, and classifies tasks according to tags.",category:[s],skills:["Ruby","Ruby on Rails","Heroku","HTML + CSS"]},{title:"Word Sticker Bot",subtitle:"Telegram bot",link:"https://github.com/chaitanyabaranwal/Word-Sticker-Bot",image:"/images/projects/word-sticker-bot.jpg",date:"Jan 2019",desc:"A Telegram bot which stylizes text sent by the user and generates a sticker from the text, which is added to the user\u2019s individual sticker set.",category:[a],skills:["Python"]}],c={categories:[r,n,s,a].map((function(e){return{name:e}})),projects:o};t.a=c},76:function(e,t,i){"use strict";function r(e){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function n(e){return(n="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){return!t||"object"!==n(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function a(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var i,n=r(e);if(t){var a=r(this).constructor;i=Reflect.construct(n,arguments,a)}else i=n.apply(this,arguments);return s(this,i)}}i.d(t,"a",(function(){return a}))},77:function(e,t,i){"use strict";function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function n(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)}i.d(t,"a",(function(){return n}))}}]);
//# sourceMappingURL=4.91a10166.chunk.js.map